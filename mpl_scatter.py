# -*- coding: utf-8 -*-
"""
Created on Fri Apr 28 14:00:00 2023

@author: Marko
"""

# scatter() - фунуція для малювання точкової діаграми
# scatter() малює одну точку для кожного спостереження. Йому
# потрібні два масиви однакової довжини, для осі х і для осі у
import matplotlib.pyplot as plt
import numpy as np
# спостереження в прикладі є результатом проїзду 13 автомобілів
# х - вік автомобіля, у - швидкість автомобіля
# здається, чим новіша машина, тим швидше вона їде
x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])
y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])

plt.scatter(x,y)
plt.show()

# побудуємо спостереження за інший день
x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])
y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])

plt.scatter(x,y)

x = np.array([2,2,8,1,15,8,12,9,7,3,11,4,7,14,12])
y = np.array([100,105,84,105,90,99,90,95,94,100,79,112,91,80,85])

plt.scatter(x,y)

plt.show()
# висновок, чим новіший автомобіль, тим швидше він їде

# color
x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])
y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])

plt.scatter(x,y, color = 'hotpink')

x = np.array([2,2,8,1,15,8,12,9,7,3,11,4,7,14,12])
y = np.array([100,105,84,105,90,99,90,95,94,100,79,112,91,80,85])

plt.scatter(x,y, color = '#4caf50')

plt.show()

# визначте колір для кожної точки
x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])
y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])
colors = np.array(["red","green","blue","yellow","pink","black","orange","purple","beige","brown","gray","cyan","magenta"])

plt.scatter(x, y, color = colors)
plt.show()

# модуль matplotlib має кілька доступних кольорових карт
# колірна карта схожа на список кольорів, у якому кожен колір має значення від 0 до 100
# ви можете вказати колірну карту за допомогою аргументу cmap

x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])
y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])
colors = np.array([0,10,20,30,40,45,50,55,60,70,80,90,100])

plt.scatter(x, y, c = colors, cmap= 'viridis')
plt.show()


# можна включити кольорову карту у малюнок plt.colorbar()
x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])
y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])
colors = np.array([0,10,20,30,40,45,50,55,60,70,80,90,100])

plt.scatter(x, y, c = colors, cmap= 'viridis')
plt.colorbar()
plt.show()

# ви можете змінити розмір за допомогою s аргументу
x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])
y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])
sizes = np.array([20,50,100,200,500,1000,60,90,10,300,600,800,75])

plt.scatter(x, y, s = sizes)
plt.show()

# ви можете встановити прозорість за допомогою alpha аргументу
x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])
y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])
sizes = np.array([20,50,100,200,500,1000,60,90,10,300,600,800,75])

plt.scatter(x, y, s = sizes, alpha = 0.5)
plt.show()

# поєднайте розмір колір та альфа
x = np.random.randint(100, size =(100))
y = np.random.randint(100, size =(100))
colors = np.random.randint(100, size=(100))
sizes = 10 * np.random.randint(100, size=(100))

plt.scatter(x,y, c=colors, alpha=0.5, s=sizes, cmap='nipy_spectral')

plt.colorbar()

plt.show()